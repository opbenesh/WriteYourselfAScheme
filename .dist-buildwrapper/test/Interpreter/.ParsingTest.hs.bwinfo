{"AST":[{"HType":"v","Pos":[21,1,39],"Name":"getParsedExpr","GType":"Name","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":null,"QType":null},{"HType":"v","Pos":[21,17,22],"Name":"parse","GType":"Var","AllTypes":[],"Module":"Text.Parsec.Prim","Package":"parsec-3.1.3","Type":"Parsec String () LispVal\n-\u003e SourceName -\u003e String -\u003e Either ParseError LispVal","QType":"Text.Parsec.Prim.Parsec\n  GHC.Base.String () Interpreter.Common.LispVal\n-\u003e Text.Parsec.Pos.SourceName\n-\u003e GHC.Base.String\n-\u003e Data.Either.Either\n     Text.Parsec.Error.ParseError Interpreter.Common.LispVal"},{"HType":"v","Pos":[21,23,32],"Name":"parseExpr","GType":"Var","AllTypes":[],"Module":"Interpreter.Parsing","Package":"main","Type":"Parser LispVal","QType":"Text.Parsec.String.Parser Interpreter.Common.LispVal"},{"HType":"v","Pos":[32,1,34,161],"Name":"test_complex","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"IO ()","QType":"GHC.Types.IO ()"},{"HType":"v","Pos":[32,21,34],"Name":"getParsedExpr","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"String -\u003e Either ParseError LispVal","QType":"GHC.Base.String\n-\u003e Data.Either.Either\n     Text.Parsec.Error.ParseError Interpreter.Common.LispVal"},{"HType":"v","Pos":[33,9,14],"Name":"Right","GType":"DataCon","AllTypes":[],"Module":"Data.Either","Package":"base","Type":"forall a b. b -\u003e Either a b","QType":"forall a b. b -\u003e Data.Either.Either a b"},{"HType":"v","Pos":[33,16,23],"Name":"Complex","GType":"DataCon","AllTypes":[],"Module":"Interpreter.Common","Package":"main","Type":"Complex Double -\u003e LispVal","QType":"Data.Complex.Complex GHC.Types.Double -\u003e Interpreter.Common.LispVal"},{"HType":"v","Pos":[33,30,36],"Name":"return","GType":"Var","AllTypes":[],"Module":"GHC.Base","Package":"base","Type":"forall a. a -\u003e IO","QType":"forall a. a -\u003e GHC.Types.IO"},{"HType":"v","Pos":[33,37,39],"Name":"()","GType":"Var","AllTypes":[],"Module":"GHC.Tuple","Package":"ghc-prim","Type":"()","QType":"()"},{"HType":"v","Pos":[34,15,29],"Name":"assertFailure_","GType":"Var","AllTypes":[],"Module":"Test.Framework.HUnitWrapper","Package":"HTF-0.11.0.1","Type":"Location -\u003e String -\u003e IO ()","QType":"Test.Framework.Location.Location\n-\u003e GHC.Base.String -\u003e GHC.Types.IO ()"},{"HType":"v","Pos":[34,31,38],"Name":"makeLoc","GType":"Var","AllTypes":[],"Module":"Test.Framework.Location","Package":"HTF-0.11.0.1","Type":"String -\u003e Int -\u003e Location","QType":"GHC.Base.String\n-\u003e GHC.Types.Int -\u003e Test.Framework.Location.Location"},{"HType":"v","Pos":[34,154,156],"Name":"fromInteger","GType":"Name","AllTypes":[],"Module":"GHC.Num","Package":"base","Type":null,"QType":null},{"HType":"v","Pos":[36,1,38,161],"Name":"test_list1","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"IO ()","QType":"GHC.Types.IO ()"},{"HType":"v","Pos":[36,19,32],"Name":"getParsedExpr","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"String -\u003e Either ParseError LispVal","QType":"GHC.Base.String\n-\u003e Data.Either.Either\n     Text.Parsec.Error.ParseError Interpreter.Common.LispVal"},{"HType":"v","Pos":[37,9,14],"Name":"Right","GType":"DataCon","AllTypes":[],"Module":"Data.Either","Package":"base","Type":"forall a b. b -\u003e Either a b","QType":"forall a b. b -\u003e Data.Either.Either a b"},{"HType":"v","Pos":[37,16,20],"Name":"List","GType":"DataCon","AllTypes":[],"Module":"Interpreter.Common","Package":"main","Type":"[LispVal] -\u003e LispVal","QType":"[Interpreter.Common.LispVal] -\u003e Interpreter.Common.LispVal"},{"HType":"v","Pos":[37,27,33],"Name":"return","GType":"Var","AllTypes":[],"Module":"GHC.Base","Package":"base","Type":"forall a. a -\u003e IO","QType":"forall a. a -\u003e GHC.Types.IO"},{"HType":"v","Pos":[37,34,36],"Name":"()","GType":"Var","AllTypes":[],"Module":"GHC.Tuple","Package":"ghc-prim","Type":"()","QType":"()"},{"HType":"v","Pos":[38,15,29],"Name":"assertFailure_","GType":"Var","AllTypes":[],"Module":"Test.Framework.HUnitWrapper","Package":"HTF-0.11.0.1","Type":"Location -\u003e String -\u003e IO ()","QType":"Test.Framework.Location.Location\n-\u003e GHC.Base.String -\u003e GHC.Types.IO ()"},{"HType":"v","Pos":[38,31,38],"Name":"makeLoc","GType":"Var","AllTypes":[],"Module":"Test.Framework.Location","Package":"HTF-0.11.0.1","Type":"String -\u003e Int -\u003e Location","QType":"GHC.Base.String\n-\u003e GHC.Types.Int -\u003e Test.Framework.Location.Location"},{"HType":"v","Pos":[38,154,156],"Name":"fromInteger","GType":"Name","AllTypes":[],"Module":"GHC.Num","Package":"base","Type":null,"QType":null},{"HType":"v","Pos":[40,1,42,161],"Name":"test_list2","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"IO ()","QType":"GHC.Types.IO ()"},{"HType":"v","Pos":[40,19,32],"Name":"getParsedExpr","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"String -\u003e Either ParseError LispVal","QType":"GHC.Base.String\n-\u003e Data.Either.Either\n     Text.Parsec.Error.ParseError Interpreter.Common.LispVal"},{"HType":"v","Pos":[41,9,14],"Name":"Right","GType":"DataCon","AllTypes":[],"Module":"Data.Either","Package":"base","Type":"forall a b. b -\u003e Either a b","QType":"forall a b. b -\u003e Data.Either.Either a b"},{"HType":"v","Pos":[41,16,20],"Name":"List","GType":"DataCon","AllTypes":[],"Module":"Interpreter.Common","Package":"main","Type":"[LispVal] -\u003e LispVal","QType":"[Interpreter.Common.LispVal] -\u003e Interpreter.Common.LispVal"},{"HType":"v","Pos":[41,27,33],"Name":"return","GType":"Var","AllTypes":[],"Module":"GHC.Base","Package":"base","Type":"forall a. a -\u003e IO","QType":"forall a. a -\u003e GHC.Types.IO"},{"HType":"v","Pos":[41,34,36],"Name":"()","GType":"Var","AllTypes":[],"Module":"GHC.Tuple","Package":"ghc-prim","Type":"()","QType":"()"},{"HType":"v","Pos":[42,15,29],"Name":"assertFailure_","GType":"Var","AllTypes":[],"Module":"Test.Framework.HUnitWrapper","Package":"HTF-0.11.0.1","Type":"Location -\u003e String -\u003e IO ()","QType":"Test.Framework.Location.Location\n-\u003e GHC.Base.String -\u003e GHC.Types.IO ()"},{"HType":"v","Pos":[42,31,38],"Name":"makeLoc","GType":"Var","AllTypes":[],"Module":"Test.Framework.Location","Package":"HTF-0.11.0.1","Type":"String -\u003e Int -\u003e Location","QType":"GHC.Base.String\n-\u003e GHC.Types.Int -\u003e Test.Framework.Location.Location"},{"HType":"v","Pos":[42,154,156],"Name":"fromInteger","GType":"Name","AllTypes":[],"Module":"GHC.Num","Package":"base","Type":null,"QType":null},{"HType":"v","Pos":[16,1,18,202],"Name":"assertParsingFailure","GType":"Name","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":null,"QType":null},{"HType":"v","Pos":[16,22,27],"Name":"input","GType":"Var","AllTypes":[],"Module":"","Package":"","Type":"String","QType":"GHC.Base.String"},{"HType":"v","Pos":[16,35,40],"Name":"parse","GType":"Var","AllTypes":[],"Module":"Text.Parsec.Prim","Package":"parsec-3.1.3","Type":"Parsec String () LispVal\n-\u003e SourceName -\u003e String -\u003e Either ParseError LispVal","QType":"Text.Parsec.Prim.Parsec\n  GHC.Base.String () Interpreter.Common.LispVal\n-\u003e Text.Parsec.Pos.SourceName\n-\u003e GHC.Base.String\n-\u003e Data.Either.Either\n     Text.Parsec.Error.ParseError Interpreter.Common.LispVal"},{"HType":"v","Pos":[16,41,50],"Name":"parseExpr","GType":"Var","AllTypes":[],"Module":"Interpreter.Parsing","Package":"main","Type":"Parser LispVal","QType":"Text.Parsec.String.Parser Interpreter.Common.LispVal"},{"HType":"v","Pos":[16,58,63],"Name":"input","GType":"Var","AllTypes":[],"Module":"","Package":"","Type":"String","QType":"GHC.Base.String"},{"HType":"v","Pos":[17,9,13],"Name":"Left","GType":"DataCon","AllTypes":[],"Module":"Data.Either","Package":"base","Type":"forall a b. a -\u003e Either a b","QType":"forall a b. a -\u003e Data.Either.Either a b"},{"HType":"v","Pos":[17,19,25],"Name":"return","GType":"Var","AllTypes":[],"Module":"GHC.Base","Package":"base","Type":"forall a. a -\u003e IO","QType":"forall a. a -\u003e GHC.Types.IO"},{"HType":"v","Pos":[17,26,28],"Name":"()","GType":"Var","AllTypes":[],"Module":"GHC.Tuple","Package":"ghc-prim","Type":"()","QType":"()"},{"HType":"v","Pos":[18,9,14],"Name":"Right","GType":"DataCon","AllTypes":[],"Module":"Data.Either","Package":"base","Type":"forall a b. b -\u003e Either a b","QType":"forall a b. b -\u003e Data.Either.Either a b"},{"HType":"v","Pos":[18,21,35],"Name":"assertFailure_","GType":"Var","AllTypes":[],"Module":"Test.Framework.HUnitWrapper","Package":"HTF-0.11.0.1","Type":"Location -\u003e String -\u003e IO ()","QType":"Test.Framework.Location.Location\n-\u003e GHC.Base.String -\u003e GHC.Types.IO ()"},{"HType":"v","Pos":[18,37,44],"Name":"makeLoc","GType":"Var","AllTypes":[],"Module":"Test.Framework.Location","Package":"HTF-0.11.0.1","Type":"String -\u003e Int -\u003e Location","QType":"GHC.Base.String\n-\u003e GHC.Types.Int -\u003e Test.Framework.Location.Location"},{"HType":"v","Pos":[18,160,162],"Name":"fromInteger","GType":"Name","AllTypes":[],"Module":"GHC.Num","Package":"base","Type":null,"QType":null},{"HType":"v","Pos":[18,165],"Name":"$","GType":"Var","AllTypes":[],"Module":"GHC.Base","Package":"base","Type":"(String -\u003e IO ()) -\u003e String -\u003e IO ()","QType":"(GHC.Base.String -\u003e GHC.Types.IO ())\n-\u003e GHC.Base.String -\u003e GHC.Types.IO ()"},{"HType":"v","Pos":[18,194,196],"Name":"++","GType":"Var","AllTypes":[],"Module":"GHC.Base","Package":"base","Type":"[Char] -\u003e [Char] -\u003e [Char]","QType":"[GHC.Types.Char] -\u003e [GHC.Types.Char] -\u003e [GHC.Types.Char]"},{"HType":"v","Pos":[18,197,202],"Name":"input","GType":"Var","AllTypes":[],"Module":"","Package":"","Type":"String","QType":"GHC.Base.String"},{"HType":"v","Pos":[11,1,13,29],"Name":"assertParsingSuccess","GType":"Name","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":null,"QType":null},{"HType":"v","Pos":[11,22,27],"Name":"input","GType":"Var","AllTypes":[],"Module":"","Package":"","Type":"String","QType":"GHC.Base.String"},{"HType":"v","Pos":[11,35,40],"Name":"parse","GType":"Var","AllTypes":[],"Module":"Text.Parsec.Prim","Package":"parsec-3.1.3","Type":"Parsec String () LispVal\n-\u003e SourceName -\u003e String -\u003e Either ParseError LispVal","QType":"Text.Parsec.Prim.Parsec\n  GHC.Base.String () Interpreter.Common.LispVal\n-\u003e Text.Parsec.Pos.SourceName\n-\u003e GHC.Base.String\n-\u003e Data.Either.Either\n     Text.Parsec.Error.ParseError Interpreter.Common.LispVal"},{"HType":"v","Pos":[11,41,50],"Name":"parseExpr","GType":"Var","AllTypes":[],"Module":"Interpreter.Parsing","Package":"main","Type":"Parser LispVal","QType":"Text.Parsec.String.Parser Interpreter.Common.LispVal"},{"HType":"v","Pos":[11,58,63],"Name":"input","GType":"Var","AllTypes":[],"Module":"","Package":"","Type":"String","QType":"GHC.Base.String"},{"HType":"v","Pos":[12,9,13],"Name":"Left","GType":"DataCon","AllTypes":[],"Module":"Data.Either","Package":"base","Type":"forall a b. a -\u003e Either a b","QType":"forall a b. a -\u003e Data.Either.Either a b"},{"HType":"v","Pos":[12,14,17],"Name":"err","GType":"Var","AllTypes":[],"Module":"","Package":"","Type":"ParseError","QType":"Text.Parsec.Error.ParseError"},{"HType":"v","Pos":[12,22,36],"Name":"assertFailure_","GType":"Var","AllTypes":[],"Module":"Test.Framework.HUnitWrapper","Package":"HTF-0.11.0.1","Type":"Location -\u003e String -\u003e IO ()","QType":"Test.Framework.Location.Location\n-\u003e GHC.Base.String -\u003e GHC.Types.IO ()"},{"HType":"v","Pos":[12,38,45],"Name":"makeLoc","GType":"Var","AllTypes":[],"Module":"Test.Framework.Location","Package":"HTF-0.11.0.1","Type":"String -\u003e Int -\u003e Location","QType":"GHC.Base.String\n-\u003e GHC.Types.Int -\u003e Test.Framework.Location.Location"},{"HType":"v","Pos":[12,161,163],"Name":"fromInteger","GType":"Name","AllTypes":[],"Module":"GHC.Num","Package":"base","Type":null,"QType":null},{"HType":"v","Pos":[12,166],"Name":"$","GType":"Var","AllTypes":[],"Module":"GHC.Base","Package":"base","Type":"(String -\u003e IO ()) -\u003e String -\u003e IO ()","QType":"(GHC.Base.String -\u003e GHC.Types.IO ())\n-\u003e GHC.Base.String -\u003e GHC.Types.IO ()"},{"HType":"v","Pos":[12,181,183],"Name":"++","GType":"Var","AllTypes":[],"Module":"GHC.Base","Package":"base","Type":"[Char] -\u003e [Char] -\u003e [Char]","QType":"[GHC.Types.Char] -\u003e [GHC.Types.Char] -\u003e [GHC.Types.Char]"},{"HType":"v","Pos":[12,184,188],"Name":"show","GType":"Var","AllTypes":[],"Module":"GHC.Show","Package":"base","Type":"ParseError -\u003e String","QType":"Text.Parsec.Error.ParseError -\u003e GHC.Base.String"},{"HType":"v","Pos":[12,189,192],"Name":"err","GType":"Var","AllTypes":[],"Module":"","Package":"","Type":"ParseError","QType":"Text.Parsec.Error.ParseError"},{"HType":"v","Pos":[13,9,14],"Name":"Right","GType":"DataCon","AllTypes":[],"Module":"Data.Either","Package":"base","Type":"forall a b. b -\u003e Either a b","QType":"forall a b. b -\u003e Data.Either.Either a b"},{"HType":"v","Pos":[13,20,26],"Name":"return","GType":"Var","AllTypes":[],"Module":"GHC.Base","Package":"base","Type":"forall a. a -\u003e IO","QType":"forall a. a -\u003e GHC.Types.IO"},{"HType":"v","Pos":[13,27,29],"Name":"()","GType":"Var","AllTypes":[],"Module":"GHC.Tuple","Package":"ghc-prim","Type":"()","QType":"()"},{"HType":"v","Pos":[23,1,41],"Name":"test_number","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"Assertion","QType":"Test.Framework.TestTypes.Assertion"},{"HType":"v","Pos":[23,15,35],"Name":"assertParsingSuccess","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"String -\u003e Assertion","QType":"GHC.Base.String -\u003e Test.Framework.TestTypes.Assertion"},{"HType":"v","Pos":[24,1,41],"Name":"test_hex","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"Assertion","QType":"Test.Framework.TestTypes.Assertion"},{"HType":"v","Pos":[24,12,32],"Name":"assertParsingSuccess","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"String -\u003e Assertion","QType":"GHC.Base.String -\u003e Test.Framework.TestTypes.Assertion"},{"HType":"v","Pos":[26,1,44],"Name":"test_float","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"Assertion","QType":"Test.Framework.TestTypes.Assertion"},{"HType":"v","Pos":[26,14,34],"Name":"assertParsingSuccess","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"String -\u003e Assertion","QType":"GHC.Base.String -\u003e Test.Framework.TestTypes.Assertion"},{"HType":"v","Pos":[28,1,38],"Name":"test_bool","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"Assertion","QType":"Test.Framework.TestTypes.Assertion"},{"HType":"v","Pos":[28,13,33],"Name":"assertParsingSuccess","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"String -\u003e Assertion","QType":"GHC.Base.String -\u003e Test.Framework.TestTypes.Assertion"},{"HType":"v","Pos":[30,1,46],"Name":"test_char","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"Assertion","QType":"Test.Framework.TestTypes.Assertion"},{"HType":"v","Pos":[30,13,33],"Name":"assertParsingSuccess","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"String -\u003e Assertion","QType":"GHC.Base.String -\u003e Test.Framework.TestTypes.Assertion"},{"HType":"v","Pos":[41,3,47,89],"Name":"htf_Interpreter_ParsingTest_thisModulesTests","GType":"Name","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":null,"QType":null},{"HType":"v","Pos":[47,48,61],"Name":"makeTestSuite","GType":"Var","AllTypes":[],"Module":"Test.Framework.TestManager","Package":"HTF-0.11.0.1","Type":"TestID -\u003e [Test] -\u003e TestSuite","QType":"Test.Framework.TestTypes.TestID\n-\u003e [Test.Framework.TestTypes.Test]\n-\u003e Test.Framework.TestTypes.TestSuite"},{"HType":"v","Pos":[23,5,17],"Name":"makeUnitTest","GType":"Var","AllTypes":[],"Module":"Test.Framework.TestManager","Package":"HTF-0.11.0.1","Type":"TestID -\u003e Location -\u003e Assertion -\u003e Test","QType":"Test.Framework.TestTypes.TestID\n-\u003e Test.Framework.Location.Location\n-\u003e Test.Framework.TestTypes.Assertion\n-\u003e Test.Framework.TestTypes.Test"},{"HType":"v","Pos":[23,28,35],"Name":"makeLoc","GType":"Var","AllTypes":[],"Module":"Test.Framework.Location","Package":"HTF-0.11.0.1","Type":"String -\u003e Int -\u003e Location","QType":"GHC.Base.String\n-\u003e GHC.Types.Int -\u003e Test.Framework.Location.Location"},{"HType":"v","Pos":[23,137,139],"Name":"fromInteger","GType":"Name","AllTypes":[],"Module":"GHC.Num","Package":"base","Type":null,"QType":null},{"HType":"v","Pos":[23,141,152],"Name":"test_number","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"Assertion","QType":"Test.Framework.TestTypes.Assertion"},{"HType":"v","Pos":[24,5,17],"Name":"makeUnitTest","GType":"Var","AllTypes":[],"Module":"Test.Framework.TestManager","Package":"HTF-0.11.0.1","Type":"TestID -\u003e Location -\u003e Assertion -\u003e Test","QType":"Test.Framework.TestTypes.TestID\n-\u003e Test.Framework.Location.Location\n-\u003e Test.Framework.TestTypes.Assertion\n-\u003e Test.Framework.TestTypes.Test"},{"HType":"v","Pos":[24,25,32],"Name":"makeLoc","GType":"Var","AllTypes":[],"Module":"Test.Framework.Location","Package":"HTF-0.11.0.1","Type":"String -\u003e Int -\u003e Location","QType":"GHC.Base.String\n-\u003e GHC.Types.Int -\u003e Test.Framework.Location.Location"},{"HType":"v","Pos":[24,134,136],"Name":"fromInteger","GType":"Name","AllTypes":[],"Module":"GHC.Num","Package":"base","Type":null,"QType":null},{"HType":"v","Pos":[24,138,146],"Name":"test_hex","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"Assertion","QType":"Test.Framework.TestTypes.Assertion"},{"HType":"v","Pos":[26,5,17],"Name":"makeUnitTest","GType":"Var","AllTypes":[],"Module":"Test.Framework.TestManager","Package":"HTF-0.11.0.1","Type":"TestID -\u003e Location -\u003e Assertion -\u003e Test","QType":"Test.Framework.TestTypes.TestID\n-\u003e Test.Framework.Location.Location\n-\u003e Test.Framework.TestTypes.Assertion\n-\u003e Test.Framework.TestTypes.Test"},{"HType":"v","Pos":[26,27,34],"Name":"makeLoc","GType":"Var","AllTypes":[],"Module":"Test.Framework.Location","Package":"HTF-0.11.0.1","Type":"String -\u003e Int -\u003e Location","QType":"GHC.Base.String\n-\u003e GHC.Types.Int -\u003e Test.Framework.Location.Location"},{"HType":"v","Pos":[26,136,138],"Name":"fromInteger","GType":"Name","AllTypes":[],"Module":"GHC.Num","Package":"base","Type":null,"QType":null},{"HType":"v","Pos":[26,140,150],"Name":"test_float","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"Assertion","QType":"Test.Framework.TestTypes.Assertion"},{"HType":"v","Pos":[28,5,17],"Name":"makeUnitTest","GType":"Var","AllTypes":[],"Module":"Test.Framework.TestManager","Package":"HTF-0.11.0.1","Type":"TestID -\u003e Location -\u003e Assertion -\u003e Test","QType":"Test.Framework.TestTypes.TestID\n-\u003e Test.Framework.Location.Location\n-\u003e Test.Framework.TestTypes.Assertion\n-\u003e Test.Framework.TestTypes.Test"},{"HType":"v","Pos":[28,26,33],"Name":"makeLoc","GType":"Var","AllTypes":[],"Module":"Test.Framework.Location","Package":"HTF-0.11.0.1","Type":"String -\u003e Int -\u003e Location","QType":"GHC.Base.String\n-\u003e GHC.Types.Int -\u003e Test.Framework.Location.Location"},{"HType":"v","Pos":[28,135,137],"Name":"fromInteger","GType":"Name","AllTypes":[],"Module":"GHC.Num","Package":"base","Type":null,"QType":null},{"HType":"v","Pos":[28,139,148],"Name":"test_bool","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"Assertion","QType":"Test.Framework.TestTypes.Assertion"},{"HType":"v","Pos":[30,5,17],"Name":"makeUnitTest","GType":"Var","AllTypes":[],"Module":"Test.Framework.TestManager","Package":"HTF-0.11.0.1","Type":"TestID -\u003e Location -\u003e Assertion -\u003e Test","QType":"Test.Framework.TestTypes.TestID\n-\u003e Test.Framework.Location.Location\n-\u003e Test.Framework.TestTypes.Assertion\n-\u003e Test.Framework.TestTypes.Test"},{"HType":"v","Pos":[30,26,33],"Name":"makeLoc","GType":"Var","AllTypes":[],"Module":"Test.Framework.Location","Package":"HTF-0.11.0.1","Type":"String -\u003e Int -\u003e Location","QType":"GHC.Base.String\n-\u003e GHC.Types.Int -\u003e Test.Framework.Location.Location"},{"HType":"v","Pos":[30,135,137],"Name":"fromInteger","GType":"Name","AllTypes":[],"Module":"GHC.Num","Package":"base","Type":null,"QType":null},{"HType":"v","Pos":[30,139,148],"Name":"test_char","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"Assertion","QType":"Test.Framework.TestTypes.Assertion"},{"HType":"v","Pos":[32,5,17],"Name":"makeUnitTest","GType":"Var","AllTypes":[],"Module":"Test.Framework.TestManager","Package":"HTF-0.11.0.1","Type":"TestID -\u003e Location -\u003e IO () -\u003e Test","QType":"Test.Framework.TestTypes.TestID\n-\u003e Test.Framework.Location.Location\n-\u003e GHC.Types.IO ()\n-\u003e Test.Framework.TestTypes.Test"},{"HType":"v","Pos":[32,29,36],"Name":"makeLoc","GType":"Var","AllTypes":[],"Module":"Test.Framework.Location","Package":"HTF-0.11.0.1","Type":"String -\u003e Int -\u003e Location","QType":"GHC.Base.String\n-\u003e GHC.Types.Int -\u003e Test.Framework.Location.Location"},{"HType":"v","Pos":[32,138,140],"Name":"fromInteger","GType":"Name","AllTypes":[],"Module":"GHC.Num","Package":"base","Type":null,"QType":null},{"HType":"v","Pos":[32,142,154],"Name":"test_complex","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"IO ()","QType":"GHC.Types.IO ()"},{"HType":"v","Pos":[36,5,17],"Name":"makeUnitTest","GType":"Var","AllTypes":[],"Module":"Test.Framework.TestManager","Package":"HTF-0.11.0.1","Type":"TestID -\u003e Location -\u003e IO () -\u003e Test","QType":"Test.Framework.TestTypes.TestID\n-\u003e Test.Framework.Location.Location\n-\u003e GHC.Types.IO ()\n-\u003e Test.Framework.TestTypes.Test"},{"HType":"v","Pos":[36,27,34],"Name":"makeLoc","GType":"Var","AllTypes":[],"Module":"Test.Framework.Location","Package":"HTF-0.11.0.1","Type":"String -\u003e Int -\u003e Location","QType":"GHC.Base.String\n-\u003e GHC.Types.Int -\u003e Test.Framework.Location.Location"},{"HType":"v","Pos":[36,136,138],"Name":"fromInteger","GType":"Name","AllTypes":[],"Module":"GHC.Num","Package":"base","Type":null,"QType":null},{"HType":"v","Pos":[36,140,150],"Name":"test_list1","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"IO ()","QType":"GHC.Types.IO ()"},{"HType":"v","Pos":[40,5,17],"Name":"makeUnitTest","GType":"Var","AllTypes":[],"Module":"Test.Framework.TestManager","Package":"HTF-0.11.0.1","Type":"TestID -\u003e Location -\u003e IO () -\u003e Test","QType":"Test.Framework.TestTypes.TestID\n-\u003e Test.Framework.Location.Location\n-\u003e GHC.Types.IO ()\n-\u003e Test.Framework.TestTypes.Test"},{"HType":"v","Pos":[40,27,34],"Name":"makeLoc","GType":"Var","AllTypes":[],"Module":"Test.Framework.Location","Package":"HTF-0.11.0.1","Type":"String -\u003e Int -\u003e Location","QType":"GHC.Base.String\n-\u003e GHC.Types.Int -\u003e Test.Framework.Location.Location"},{"HType":"v","Pos":[40,136,138],"Name":"fromInteger","GType":"Name","AllTypes":[],"Module":"GHC.Num","Package":"base","Type":null,"QType":null},{"HType":"v","Pos":[40,140,150],"Name":"test_list2","GType":"Var","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":"IO ()","QType":"GHC.Types.IO ()"},{"HType":"v","Pos":[46,1,45],"Name":"htf_Interpreter_ParsingTest_thisModulesTests","GType":"Name","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":null,"QType":null},{"HType":"t","Pos":[46,49,58],"Name":"TestSuite","GType":"Name","AllTypes":[],"Module":"Test.Framework.TestTypes","Package":"HTF-0.11.0.1","Type":null,"QType":null},{"HType":"v","Pos":[20,1,14],"Name":"getParsedExpr","GType":"Name","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":null,"QType":null},{"HType":"t","Pos":[20,18,24],"Name":"String","GType":"Name","AllTypes":[],"Module":"GHC.Base","Package":"base","Type":null,"QType":null},{"HType":"t","Pos":[20,28,34],"Name":"Either","GType":"Name","AllTypes":[],"Module":"Data.Either","Package":"base","Type":null,"QType":null},{"HType":"t","Pos":[20,35,45],"Name":"ParseError","GType":"Name","AllTypes":[],"Module":"Text.Parsec.Error","Package":"parsec-3.1.3","Type":null,"QType":null},{"HType":"t","Pos":[20,46,53],"Name":"LispVal","GType":"Name","AllTypes":[],"Module":"Interpreter.Common","Package":"main","Type":null,"QType":null},{"HType":"v","Pos":[15,1,21],"Name":"assertParsingFailure","GType":"Name","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":null,"QType":null},{"HType":"t","Pos":[15,25,31],"Name":"String","GType":"Name","AllTypes":[],"Module":"GHC.Base","Package":"base","Type":null,"QType":null},{"HType":"t","Pos":[15,35,44],"Name":"Assertion","GType":"Name","AllTypes":[],"Module":"Test.Framework.TestTypes","Package":"HTF-0.11.0.1","Type":null,"QType":null},{"HType":"v","Pos":[10,1,21],"Name":"assertParsingSuccess","GType":"Name","AllTypes":[],"Module":"Interpreter.ParsingTest","Package":"main","Type":null,"QType":null},{"HType":"t","Pos":[10,25,31],"Name":"String","GType":"Name","AllTypes":[],"Module":"GHC.Base","Package":"base","Type":null,"QType":null},{"HType":"t","Pos":[10,35,44],"Name":"Assertion","GType":"Name","AllTypes":[],"Module":"Test.Framework.TestTypes","Package":"HTF-0.11.0.1","Type":null,"QType":null},{"HType":"t","Pos":[7,49,58],"Name":"Assertion","GType":"Name","AllTypes":[],"Module":"Test.Framework.TestTypes","Package":"HTF-0.11.0.1","Type":null,"QType":null},{"HType":"t","Pos":[8,49,59],"Name":"ParseError","GType":"Name","AllTypes":[],"Module":"Text.Parsec.Error","Package":"parsec-3.1.3","Type":null,"QType":null},{"HType":"t","Pos":[8,61,67],"Name":"Parser","GType":"Name","AllTypes":[],"Module":"Text.Parsec.String","Package":"parsec-3.1.3","Type":null,"QType":null},{"HType":"v","Pos":[8,69,74],"Name":"parse","GType":"Name","AllTypes":[],"Module":"Text.Parsec.Prim","Package":"parsec-3.1.3","Type":null,"QType":null}],"BuildFlags":[{"m":"Interpreter.ParsingTest","p":["-D__GLASGOW_HASKELL__=704"],"a":["-package-conf","C:\\Development\\Haskell\\SchemeInterpreter\\.dist-buildwrapper\\dist\\package.conf.inplace","-hide-all-packages","-fbuilding-cabal-package","-i","-iC:\\Development\\Haskell\\SchemeInterpreter\\.dist-buildwrapper\\dist\\build\\ParserTest\\ParserTest-tmp","-itest","-isrc","-iC:\\Development\\Haskell\\SchemeInterpreter\\.dist-buildwrapper\\dist\\build\\autogen","-IC:\\Development\\Haskell\\SchemeInterpreter\\.dist-buildwrapper\\dist\\build\\autogen","-IC:\\Development\\Haskell\\SchemeInterpreter\\.dist-buildwrapper\\dist\\build\\ParserTest\\ParserTest-tmp","-optP-include","-optPC:\\Development\\Haskell\\SchemeInterpreter\\.dist-buildwrapper\\dist\\build\\autogen\\cabal_macros.h","-odir","C:\\Development\\Haskell\\SchemeInterpreter\\.dist-buildwrapper\\dist\\build\\ParserTest\\ParserTest-tmp","-hidir","C:\\Development\\Haskell\\SchemeInterpreter\\.dist-buildwrapper\\dist\\build\\ParserTest\\ParserTest-tmp","-stubdir","C:\\Development\\Haskell\\SchemeInterpreter\\.dist-buildwrapper\\dist\\build\\ParserTest\\ParserTest-tmp","-package-id","HTF-0.11.0.1-5ee9a37e60b1db0a41bcd4e08ed65f8d","-package-id","base-4.5.1.0-7c83b96f47f23db63c42a56351dcb917","-package-id","mtl-2.1.2-5337caef659244e51e2f5fb2e944d97f","-package-id","parsec-3.1.3-c6520ce37c632b341f9cd5e52b209a2e","-Wall","-rtsopts","-XHaskell98"],"c":"ParserTest"},[]]}